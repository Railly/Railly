---
import Card from "./Card.astro";
import EmbedContainer from "./EmbedContainer.astro";

type ColorName =
  | "blue"
  | "teal"
  | "yellow"
  | "cyan"
  | "purple"
  | "magenta"
  | "orange";

interface Props {
  title: string;
  year: string;
  color: ColorName;
  embedId: string;
  embedSrc: string;
  embedType: "youtube" | "linkedin";
  project?: string;
  hosts?: string[];
}

const { title, year, color, embedId, embedSrc, embedType, project, hosts } = Astro.props;

// Host mapping for logos and SVGs
const hostMap = {
  vercel: {
    name: "Vercel",
    svgPath: "M37.5274 0L75.0548 65H0L37.5274 0Z"
  },
  midudev: {
    name: "Midudev", 
    logo: "/images/midudev-logo.webp"
  }
};
---

<Card
  color={color}
  className="achievement-card relative"
  data-target={embedId}
>
  <div
    class={`absolute inset-0 bg-gradient-to-tr from-flexoki-${color}/[0.03] to-transparent opacity-80 [mask-image:linear-gradient(45deg,#000_25%,transparent_25%,transparent_50%,#000_50%,#000_75%,transparent_75%,transparent)] [mask-size:8px_8px] pointer-events-none`}
  >
  </div>
  <div class="flex flex-col gap-2 pb-6">
    <div class="flex items-start justify-between">
      <div>
        <h3 class="text-flexoki-tx font-medium">
          {title}
        </h3>
        <div class="flex items-center gap-2 mt-1">
          {hosts && hosts.length > 0 && (
            <>
              <span class="text-xs text-flexoki-tx-2">hosted by</span>
              <div class="flex items-center gap-1.5">
                {hosts.map((hostKey, index) => {
                  const host = hostMap[hostKey];
                  return (
                    <>
                      <div class="flex items-center gap-1">
                        {host.svgPath && (
                          <svg viewBox="0 0 76 65" fill="none" class="h-4 w-4">
                            <path
                              d={host.svgPath}
                              fill="currentColor"
                              class="text-flexoki-tx"
                            />
                          </svg>
                        )}
                        {host.logo && (
                          <img
                            src={host.logo}
                            alt={host.name}
                            class="h-4 w-4"
                          />
                        )}
                        <span class="text-sm">{host.name}</span>
                      </div>
                      {index < hosts.length - 1 && <span>Ã—</span>}
                    </>
                  );
                })}
              </div>
            </>
          )}
          {project && (
            <>
              <span class="text-xs text-flexoki-tx-2 ml-2">project:</span>
              <span class="text-sm text-flexoki-tx">{project}</span>
            </>
          )}
        </div>
      </div>
      <span
        class="text-xs text-flexoki-tx-3 font-medium px-2 py-0.5 rounded-full border border-flexoki-tx-3/30"
      >
        {year}
      </span>
    </div>
    
    <EmbedContainer 
      embedId={embedId} 
      embedSrc={embedSrc} 
      embedType={embedType}
    />
    
    <button
      class={`expand-btn cursor-pointer group-hover:bg-flexoki-${color}/5 hover:bg-current/10 absolute bottom-0 left-0 right-0 w-full py-2 text-xs flex items-center justify-center text-flexoki-tx-2 hover:text-flexoki-${color} transition-colors`}
      aria-label="Toggle video"
      data-target={embedId}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-3 h-3"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M19.5 8.25l-7.5 7.5-7.5-7.5"
        />
      </svg>
    </button>
  </div>
</Card>