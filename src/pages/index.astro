---
import Layout from "../layouts/Layout.astro";
import GradualLogo from "../components/GradualLogo.astro";
import TinteLogo from "../components/TinteLogo.astro";
import AchievementCard from "../components/AchievementCard.astro";
import PresentCard from "../components/PresentCard.astro";
import ProjectCard from "../components/ProjectCard.astro";
import BlogCard from "../components/BlogCard.astro";
import ConnectLinks from "../components/ConnectLinks.astro";
import HeroSection from "../components/HeroSection.astro";
import SectionHeader from "../components/SectionHeader.astro";
import { getCollection } from "astro:content";
import Text0Logo from "../assets/svgs/t0-logo.svg";
import CrafterIcon from "../assets/svgs/crafter.svg";
import TheAgileMonkeysLogo from "../assets/svgs/the-agile-monkeys.svg";

const posts = await getCollection("blog", ({ data }) => {
  return import.meta.env.PROD ? data.status === "published" : true;
});

const sortedPosts = posts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Data objects for all sections
const heroData = {
  name: "Railly Hugo",
  title: "Hunter"
};

const presentData = [
  {
    title: "The Agile Monkeys",
    description: "AI prototyping unit",
    color: "blue" as const,
    icon: "theagilemonkeys" as IconKey
  },
  {
    title: "Crafter Station", 
    description: "Open-source organization",
    color: "orange" as const,
    href: "https://tinte.dev",
    icon: "crafter" as IconKey
  },
  {
    title: "UNMSM",
    description: "Teaching & Researching", 
    color: "yellow" as const,
    iconPadding: "p-3",
    isImage: true,
    imageSrc: "/images/unmsm-logo.webp",
    imageAlt: "UNMSM Research"
  },
  {
    title: "Midudev Team",
    description: "The leading Hispanic streamer",
    color: "teal" as const, 
    iconPadding: "p-2.5",
    isImage: true,
    imageSrc: "/images/midudev-logo.webp",
    imageAlt: "Midudev Team"
  }
];

const projectsData = [
  {
    title: "Gradual",
    description: "All-in-one learning platform.",
    color: "cyan" as const,
    href: "https://trygradual.com",
    icon: "gradual" as IconKey
  },
  {
    title: "text0",
    description: "AI-powered text editor.",
    color: "yellow" as const,
    href: "https://text0.dev", 
    icon: "text0" as IconKey
  },
  {
    title: "Tinte",
    description: "Multiplatform theme builder",
    color: "purple" as const,
    href: "https://tinte.dev",
    icon: "tinte" as IconKey
  },
  {
    title: "One Hunter Theme",
    description: "~30k VSCode downloads.",
    color: "magenta" as const,
    href: "https://marketplace.visualstudio.com/items?itemName=RaillyHugo.one-hunter",
    isImage: true,
    imageSrc: "/images/one-hunter-logo.webp",
    imageAlt: "One Hunter Theme", 
    iconPadding: "p-2.5"
  }
];

const achievementsData = [
  {
    title: "üèÜ Overall Winner ‚Äî First Ever Next.js Global Hackathon",
    year: "2025",
    color: "cyan" as const,
    embedId: "text0-embed",
    embedSrc: "https://www.youtube.com/embed/KDRwgbwq0_c?start=1142",
    embedType: "youtube" as const,
    project: "text0",
    hosts: ["vercel"]
  },
  {
    title: "ü•â 3rd Place ‚Äî Vercel √ó Midudev Hackathon",
    year: "2024", 
    color: "magenta" as const,
    embedId: "tinte-embed",
    embedSrc: "https://www.linkedin.com/embed/feed/update/urn:li:ugcPost:7232743944592240640?compact=1",
    embedType: "linkedin" as const,
    project: "Tinte",
    hosts: ["vercel", "midudev"]
  },
  {
    title: "üéñÔ∏è Finalist ‚Äî IA Hackathon LATAM",
    year: "2025",
    color: "yellow" as const,
    embedId: "githunter-embed", 
    embedSrc: "https://www.linkedin.com/embed/feed/update/urn:li:ugcPost:7328521111485243393?compact=1",
    embedType: "linkedin" as const,
    project: "GitHunter"
  }
];

// Icon mapping for components
const iconMap = {
  theagilemonkeys: TheAgileMonkeysLogo,
  crafter: CrafterIcon,
  gradual: GradualLogo,
  text0: Text0Logo,
  tinte: TinteLogo
} as const;

type IconKey = keyof typeof iconMap;
---

<Layout>
  <main
    class="flex flex-col gap-12 items-center justify-center min-h-screen max-w-2xl mx-auto text-flexoki-tx px-6 py-12"
  >
    <HeroSection name={heroData.name} title={heroData.title} />

    <section class="flex flex-col gap-8 w-full">
      <SectionHeader title="Present" />
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        {presentData.map((item) => {
          const IconComponent = item.icon && item.icon in iconMap ? iconMap[item.icon as IconKey] : null;
          return (
            <PresentCard
              title={item.title}
              description={item.description}
              color={item.color}
              href={item.href}
              iconPadding={item.iconPadding}
              isImage={item.isImage}
              imageSrc={item.imageSrc}
              imageAlt={item.imageAlt}
            >
              {IconComponent && (
                <IconComponent 
                  slot="icon" 
                  class={`size-6 text-flexoki-${item.color === 'blue' ? 'tx' : item.color}`} 
                />
              )}
            </PresentCard>
          );
        })}
      </div>
    </section>
    <section class="flex flex-col gap-8 w-full">
      <SectionHeader title="Projects" />
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        {projectsData.map((project) => {
          const IconComponent = project.icon && project.icon in iconMap ? iconMap[project.icon as IconKey] : null;
          return (
            <ProjectCard
              title={project.title}
              description={project.description}
              color={project.color}
              href={project.href}
              isImage={project.isImage}
              imageSrc={project.imageSrc}
              imageAlt={project.imageAlt}
              iconPadding={project.iconPadding}
            >
              {IconComponent && (
                <IconComponent
                  slot="icon"
                  size={project.icon === 'text0' ? undefined : 28}
                  width={project.icon === 'text0' ? 28 : undefined}
                  height={project.icon === 'text0' ? 28 : undefined}
                  class={`text-flexoki-tx-3 group-hover:text-flexoki-${project.color} transition-colors duration-300 ${project.icon === 'text0' ? 'rounded-sm' : ''}`}
                />
              )}
            </ProjectCard>
          );
        })}
      </div>
    </section>
    <section class="flex flex-col gap-8 w-full">
      <SectionHeader title="Achievements" />
      <div class="flex flex-col gap-4">
        {achievementsData.map((achievement) => (
          <AchievementCard
            title={achievement.title}
            year={achievement.year}
            color={achievement.color}
            embedId={achievement.embedId}
            embedSrc={achievement.embedSrc}
            embedType={achievement.embedType}
            project={achievement.project}
            hosts={achievement.hosts}
          />
        ))}
      </div>
    </section>
    <section class="w-full">
      <SectionHeader title="Writing" className="mb-4" />
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        {
          sortedPosts.map((post) => (
            <BlogCard
              href={`/blog/${post.slug}`}
              target="_self"
              color="purple"
              title={post.data.title}
              description={post.data.description}
            />
          ))
        }
        {
          sortedPosts.length < 2 && (
            <BlogCard
              className="!cursor-default"
              color="yellow"
              title="Coming soon"
              description="I'm working on it."
            />
          )
        }
      </div>
    </section>
    <footer class="flex flex-col items-center gap-3">
      <SectionHeader title="Connect" />
      <ConnectLinks />
    </footer>
  </main>
</Layout>
