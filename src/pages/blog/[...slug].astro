---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import TableOfContents from "../../components/TableOfContents.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => {
    return import.meta.env.PROD ? data.status === "published" : true;
  });
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;
const { Content, headings } = await post.render();

// Format dates
const publishedDate = post.data.pubDate.toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

const updatedDate = post.data.updatedDate
  ? post.data.updatedDate.toLocaleDateString("en-US", {
      year: "numeric",
      month: "long",
      day: "numeric",
      hour: "numeric",
      minute: "numeric",
    })
  : null;
---

<Layout title={post.data.title} description={post.data.description}>
  <main class="max-w-[83rem] mx-auto px-4 sm:px-6 py-12">
    <div class="lg:grid lg:grid-cols-[1fr_minmax(0,_2.5fr)_1fr] lg:gap-8">
      <!-- Left Sidebar - Table of Contents -->
      <div class="lg:col-start-1">
        <TableOfContents headings={headings} />
      </div>

      <!-- Main Content -->
      <article class="relative lg:col-start-2">
        <!-- Article Header -->
        <header class="space-y-2 mb-8 max-w-2xl text-left">
          {
            post.data.category && (
              <div class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-muted text-muted-foreground">
                {post.data.category}
              </div>
            )
          }
          <h1
            class="font-sans text-base font-semibold text-foreground tracking-tight"
          >
            {post.data.title}
          </h1>
          {
            post.data.description && (
              <p class="text-sm text-flexoki-tx-2">{post.data.description}</p>
            )
          }

          <time
            class="text-sm font-mono text-flexoki-tx-2"
            datetime={post.data.pubDate.toISOString()}
          >
            {publishedDate}
          </time>
        </header>

        <!-- Hero Image -->
        {
          post.data.heroImage && (
            <div class="relative w-full aspect-[2/1] mb-10 rounded-lg overflow-hidden bg-muted">
              <img
                src={post.data.heroImage.src}
                alt={post.data.heroImage.alt}
                class="object-cover w-full h-full"
              />
            </div>
          )
        }

        <!-- Content -->
        <div
          class:list={[
            "prose prose-flexoki max-w-none",
            "prose-headings:text-flexoki-tx prose-headings:text-base prose-headings:font-semibold",
            "prose-p:text-flexoki-tx prose-p:text-base prose-p:leading-relaxed",
            "prose-a:text-flexoki-tx prose-a:no-underline hover:prose-a:underline",
            "prose-strong:text-flexoki-tx prose-strong:text-base prose-strong:font-semibold",
            "prose-li:text-flexoki-tx prose-li:leading-relaxed",
            "prose-li:marker:text-flexoki-tx-2",
            "prose-table:text-flexoki-tx prose-table:border-flexoki-ui prose-table:border prose-table:rounded-lg",
            "prose-tr:border-flexoki-ui prose-tr:border-b",
            "prose-td:border-flexoki-ui prose-td:border-r",
            "prose-td:p-2 prose-td:text-flexoki-tx-2",
            "prose-th:p-2 prose-th:text-flexoki-tx",
            "prose-img:rounded-xl prose-img:border-flexoki-ui prose-img:border prose-img:p-1.5",
            "prose-blockquote:border-l-blue-500 prose-blockquote:text-flexoki-tx-2 prose-blockquote:text-lg prose-blockquote:font-medium prose-blockquote:italic prose-blockquote:font-serif",
            "dark:prose-invert",
          ]}
        >
          <Content />
        </div>

        <!-- Updated Date Notice -->
        {
          updatedDate && (
            <div class="mt-8 text-sm text-muted-foreground border-t border-border pt-4">
              <p>Last updated on {updatedDate}</p>
            </div>
          )
        }
      </article>

      <!-- Right Sidebar (empty for balance) -->
      <div class="lg:col-start-3"></div>
    </div>
  </main>
</Layout>

<style>
  /* Smooth anchor offset for header links */
  :target {
    scroll-margin-top: 2rem;
  }
</style>
